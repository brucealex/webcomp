Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    WS

Grammar

Rule 0     S' -> file_input_end
Rule 1     file_input_end -> file_input ENDMARKER
Rule 2     file_input -> file_input NEWLINE
Rule 3     file_input -> file_input stmt
Rule 4     file_input -> NEWLINE
Rule 5     file_input -> stmt
Rule 6     file_input -> BEGIN file_input END
Rule 7     funcdef -> DEF NAME parameters COLON suite
Rule 8     parameters -> LPAR RPAR
Rule 9     parameters -> LPAR varargslist RPAR
Rule 10    varargslist -> varargslist COMMA NAME
Rule 11    varargslist -> NAME
Rule 12    stmt -> simple_stmt
Rule 13    stmt -> compound_stmt
Rule 14    simple_stmt -> small_stmts NEWLINE
Rule 15    simple_stmt -> small_stmts SEMICOLON NEWLINE
Rule 16    small_stmts -> small_stmts SEMICOLON small_stmt
Rule 17    small_stmts -> small_stmt
Rule 18    small_stmt -> flow_stmt
Rule 19    small_stmt -> expr_stmt
Rule 20    expr_stmt -> testlist ASSIGN testlist
Rule 21    expr_stmt -> testlist
Rule 22    flow_stmt -> return_stmt
Rule 23    return_stmt -> RETURN testlist
Rule 24    compound_stmt -> if_stmt
Rule 25    compound_stmt -> funcdef
Rule 26    if_stmt -> IF test COLON suite
Rule 27    suite -> simple_stmt
Rule 28    suite -> NEWLINE INDENT stmts DEDENT
Rule 29    stmts -> stmts stmt
Rule 30    stmts -> stmt
Rule 31    comparison -> comparison PLUS comparison
Rule 32    comparison -> comparison MINUS comparison
Rule 33    comparison -> comparison MULT comparison
Rule 34    comparison -> comparison DIV comparison
Rule 35    comparison -> comparison LT comparison
Rule 36    comparison -> comparison EQ comparison
Rule 37    comparison -> comparison GT comparison
Rule 38    comparison -> PLUS comparison
Rule 39    comparison -> MINUS comparison
Rule 40    comparison -> power
Rule 41    power -> atom
Rule 42    power -> atom trailer
Rule 43    atom -> NAME
Rule 44    atom -> NUMBER
Rule 45    atom -> STRING
Rule 46    atom -> LPAR testlist RPAR
Rule 47    trailer -> LPAR arglist RPAR
Rule 48    testlist -> testlist_multi COMMA
Rule 49    testlist -> testlist_multi
Rule 50    testlist_multi -> testlist_multi COMMA test
Rule 51    testlist_multi -> test
Rule 52    test -> comparison
Rule 53    arglist -> arglist COMMA argument
Rule 54    arglist -> argument
Rule 55    argument -> test

Terminals, with rules where they appear

ASSIGN               : 20
BEGIN                : 6
COLON                : 7 26
COMMA                : 10 48 50 53
DEDENT               : 28
DEF                  : 7
DIV                  : 34
END                  : 6
ENDMARKER            : 1
EQ                   : 36
GT                   : 37
IF                   : 26
INDENT               : 28
LPAR                 : 8 9 46 47
LT                   : 35
MINUS                : 32 39
MULT                 : 33
NAME                 : 7 10 11 43
NEWLINE              : 2 4 14 15 28
NUMBER               : 44
PLUS                 : 31 38
RETURN               : 23
RPAR                 : 8 9 46 47
SEMICOLON            : 15 16
STRING               : 45
WS                   : 
error                : 

Nonterminals, with rules where they appear

arglist              : 47 53
argument             : 53 54
atom                 : 41 42
comparison           : 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 39 52
compound_stmt        : 13
expr_stmt            : 19
file_input           : 1 2 3 6
file_input_end       : 0
flow_stmt            : 18
funcdef              : 25
if_stmt              : 24
parameters           : 7
power                : 40
return_stmt          : 22
simple_stmt          : 12 27
small_stmt           : 16 17
small_stmts          : 14 15 16
stmt                 : 3 5 29 30
stmts                : 28 29
suite                : 7 26
test                 : 26 50 51 55
testlist             : 20 20 21 23 46
testlist_multi       : 48 49 50
trailer              : 42
varargslist          : 9 10

Parsing method: LALR

state 0

    (0) S' -> . file_input_end
    (1) file_input_end -> . file_input ENDMARKER
    (2) file_input -> . file_input NEWLINE
    (3) file_input -> . file_input stmt
    (4) file_input -> . NEWLINE
    (5) file_input -> . stmt
    (6) file_input -> . BEGIN file_input END
    (12) stmt -> . simple_stmt
    (13) stmt -> . compound_stmt
    (14) simple_stmt -> . small_stmts NEWLINE
    (15) simple_stmt -> . small_stmts SEMICOLON NEWLINE
    (24) compound_stmt -> . if_stmt
    (25) compound_stmt -> . funcdef
    (16) small_stmts -> . small_stmts SEMICOLON small_stmt
    (17) small_stmts -> . small_stmt
    (26) if_stmt -> . IF test COLON suite
    (7) funcdef -> . DEF NAME parameters COLON suite
    (18) small_stmt -> . flow_stmt
    (19) small_stmt -> . expr_stmt
    (22) flow_stmt -> . return_stmt
    (20) expr_stmt -> . testlist ASSIGN testlist
    (21) expr_stmt -> . testlist
    (23) return_stmt -> . RETURN testlist
    (48) testlist -> . testlist_multi COMMA
    (49) testlist -> . testlist_multi
    (50) testlist_multi -> . testlist_multi COMMA test
    (51) testlist_multi -> . test
    (52) test -> . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    NEWLINE         shift and go to state 11
    BEGIN           shift and go to state 9
    IF              shift and go to state 14
    DEF             shift and go to state 7
    RETURN          shift and go to state 5
    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    flow_stmt                      shift and go to state 8
    comparison                     shift and go to state 26
    expr_stmt                      shift and go to state 10
    if_stmt                        shift and go to state 27
    simple_stmt                    shift and go to state 18
    file_input                     shift and go to state 28
    testlist                       shift and go to state 19
    stmt                           shift and go to state 20
    testlist_multi                 shift and go to state 21
    small_stmt                     shift and go to state 2
    power                          shift and go to state 17
    test                           shift and go to state 13
    return_stmt                    shift and go to state 4
    atom                           shift and go to state 22
    funcdef                        shift and go to state 23
    file_input_end                 shift and go to state 24
    compound_stmt                  shift and go to state 15
    small_stmts                    shift and go to state 29

state 1

    (46) atom -> LPAR . testlist RPAR
    (48) testlist -> . testlist_multi COMMA
    (49) testlist -> . testlist_multi
    (50) testlist_multi -> . testlist_multi COMMA test
    (51) testlist_multi -> . test
    (52) test -> . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    comparison                     shift and go to state 26
    power                          shift and go to state 17
    testlist                       shift and go to state 30
    testlist_multi                 shift and go to state 21
    atom                           shift and go to state 22
    test                           shift and go to state 13

state 2

    (17) small_stmts -> small_stmt .

    NEWLINE         reduce using rule 17 (small_stmts -> small_stmt .)
    SEMICOLON       reduce using rule 17 (small_stmts -> small_stmt .)


state 3

    (44) atom -> NUMBER .

    LPAR            reduce using rule 44 (atom -> NUMBER .)
    PLUS            reduce using rule 44 (atom -> NUMBER .)
    MINUS           reduce using rule 44 (atom -> NUMBER .)
    MULT            reduce using rule 44 (atom -> NUMBER .)
    DIV             reduce using rule 44 (atom -> NUMBER .)
    LT              reduce using rule 44 (atom -> NUMBER .)
    EQ              reduce using rule 44 (atom -> NUMBER .)
    GT              reduce using rule 44 (atom -> NUMBER .)
    COMMA           reduce using rule 44 (atom -> NUMBER .)
    ASSIGN          reduce using rule 44 (atom -> NUMBER .)
    NEWLINE         reduce using rule 44 (atom -> NUMBER .)
    SEMICOLON       reduce using rule 44 (atom -> NUMBER .)
    RPAR            reduce using rule 44 (atom -> NUMBER .)
    COLON           reduce using rule 44 (atom -> NUMBER .)


state 4

    (22) flow_stmt -> return_stmt .

    NEWLINE         reduce using rule 22 (flow_stmt -> return_stmt .)
    SEMICOLON       reduce using rule 22 (flow_stmt -> return_stmt .)


state 5

    (23) return_stmt -> RETURN . testlist
    (48) testlist -> . testlist_multi COMMA
    (49) testlist -> . testlist_multi
    (50) testlist_multi -> . testlist_multi COMMA test
    (51) testlist_multi -> . test
    (52) test -> . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    comparison                     shift and go to state 26
    power                          shift and go to state 17
    testlist                       shift and go to state 31
    testlist_multi                 shift and go to state 21
    atom                           shift and go to state 22
    test                           shift and go to state 13

state 6

    (39) comparison -> MINUS . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    comparison                     shift and go to state 32
    power                          shift and go to state 17
    atom                           shift and go to state 22

state 7

    (7) funcdef -> DEF . NAME parameters COLON suite

    NAME            shift and go to state 33


state 8

    (18) small_stmt -> flow_stmt .

    NEWLINE         reduce using rule 18 (small_stmt -> flow_stmt .)
    SEMICOLON       reduce using rule 18 (small_stmt -> flow_stmt .)


state 9

    (6) file_input -> BEGIN . file_input END
    (2) file_input -> . file_input NEWLINE
    (3) file_input -> . file_input stmt
    (4) file_input -> . NEWLINE
    (5) file_input -> . stmt
    (6) file_input -> . BEGIN file_input END
    (12) stmt -> . simple_stmt
    (13) stmt -> . compound_stmt
    (14) simple_stmt -> . small_stmts NEWLINE
    (15) simple_stmt -> . small_stmts SEMICOLON NEWLINE
    (24) compound_stmt -> . if_stmt
    (25) compound_stmt -> . funcdef
    (16) small_stmts -> . small_stmts SEMICOLON small_stmt
    (17) small_stmts -> . small_stmt
    (26) if_stmt -> . IF test COLON suite
    (7) funcdef -> . DEF NAME parameters COLON suite
    (18) small_stmt -> . flow_stmt
    (19) small_stmt -> . expr_stmt
    (22) flow_stmt -> . return_stmt
    (20) expr_stmt -> . testlist ASSIGN testlist
    (21) expr_stmt -> . testlist
    (23) return_stmt -> . RETURN testlist
    (48) testlist -> . testlist_multi COMMA
    (49) testlist -> . testlist_multi
    (50) testlist_multi -> . testlist_multi COMMA test
    (51) testlist_multi -> . test
    (52) test -> . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    NEWLINE         shift and go to state 11
    BEGIN           shift and go to state 9
    IF              shift and go to state 14
    DEF             shift and go to state 7
    RETURN          shift and go to state 5
    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    flow_stmt                      shift and go to state 8
    comparison                     shift and go to state 26
    if_stmt                        shift and go to state 27
    simple_stmt                    shift and go to state 18
    file_input                     shift and go to state 34
    testlist                       shift and go to state 19
    stmt                           shift and go to state 20
    testlist_multi                 shift and go to state 21
    small_stmt                     shift and go to state 2
    power                          shift and go to state 17
    test                           shift and go to state 13
    return_stmt                    shift and go to state 4
    atom                           shift and go to state 22
    funcdef                        shift and go to state 23
    expr_stmt                      shift and go to state 10
    compound_stmt                  shift and go to state 15
    small_stmts                    shift and go to state 29

state 10

    (19) small_stmt -> expr_stmt .

    NEWLINE         reduce using rule 19 (small_stmt -> expr_stmt .)
    SEMICOLON       reduce using rule 19 (small_stmt -> expr_stmt .)


state 11

    (4) file_input -> NEWLINE .

    END             reduce using rule 4 (file_input -> NEWLINE .)
    NEWLINE         reduce using rule 4 (file_input -> NEWLINE .)
    IF              reduce using rule 4 (file_input -> NEWLINE .)
    DEF             reduce using rule 4 (file_input -> NEWLINE .)
    RETURN          reduce using rule 4 (file_input -> NEWLINE .)
    PLUS            reduce using rule 4 (file_input -> NEWLINE .)
    MINUS           reduce using rule 4 (file_input -> NEWLINE .)
    NAME            reduce using rule 4 (file_input -> NEWLINE .)
    NUMBER          reduce using rule 4 (file_input -> NEWLINE .)
    STRING          reduce using rule 4 (file_input -> NEWLINE .)
    LPAR            reduce using rule 4 (file_input -> NEWLINE .)
    ENDMARKER       reduce using rule 4 (file_input -> NEWLINE .)


state 12

    (38) comparison -> PLUS . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    comparison                     shift and go to state 35
    power                          shift and go to state 17
    atom                           shift and go to state 22

state 13

    (51) testlist_multi -> test .

    COMMA           reduce using rule 51 (testlist_multi -> test .)
    ASSIGN          reduce using rule 51 (testlist_multi -> test .)
    NEWLINE         reduce using rule 51 (testlist_multi -> test .)
    SEMICOLON       reduce using rule 51 (testlist_multi -> test .)
    RPAR            reduce using rule 51 (testlist_multi -> test .)


state 14

    (26) if_stmt -> IF . test COLON suite
    (52) test -> . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    comparison                     shift and go to state 26
    power                          shift and go to state 17
    atom                           shift and go to state 22
    test                           shift and go to state 36

state 15

    (13) stmt -> compound_stmt .

    DEDENT          reduce using rule 13 (stmt -> compound_stmt .)
    IF              reduce using rule 13 (stmt -> compound_stmt .)
    DEF             reduce using rule 13 (stmt -> compound_stmt .)
    RETURN          reduce using rule 13 (stmt -> compound_stmt .)
    PLUS            reduce using rule 13 (stmt -> compound_stmt .)
    MINUS           reduce using rule 13 (stmt -> compound_stmt .)
    NAME            reduce using rule 13 (stmt -> compound_stmt .)
    NUMBER          reduce using rule 13 (stmt -> compound_stmt .)
    STRING          reduce using rule 13 (stmt -> compound_stmt .)
    LPAR            reduce using rule 13 (stmt -> compound_stmt .)
    END             reduce using rule 13 (stmt -> compound_stmt .)
    NEWLINE         reduce using rule 13 (stmt -> compound_stmt .)
    ENDMARKER       reduce using rule 13 (stmt -> compound_stmt .)


state 16

    (45) atom -> STRING .

    LPAR            reduce using rule 45 (atom -> STRING .)
    PLUS            reduce using rule 45 (atom -> STRING .)
    MINUS           reduce using rule 45 (atom -> STRING .)
    MULT            reduce using rule 45 (atom -> STRING .)
    DIV             reduce using rule 45 (atom -> STRING .)
    LT              reduce using rule 45 (atom -> STRING .)
    EQ              reduce using rule 45 (atom -> STRING .)
    GT              reduce using rule 45 (atom -> STRING .)
    COMMA           reduce using rule 45 (atom -> STRING .)
    ASSIGN          reduce using rule 45 (atom -> STRING .)
    NEWLINE         reduce using rule 45 (atom -> STRING .)
    SEMICOLON       reduce using rule 45 (atom -> STRING .)
    RPAR            reduce using rule 45 (atom -> STRING .)
    COLON           reduce using rule 45 (atom -> STRING .)


state 17

    (40) comparison -> power .

    PLUS            reduce using rule 40 (comparison -> power .)
    MINUS           reduce using rule 40 (comparison -> power .)
    MULT            reduce using rule 40 (comparison -> power .)
    DIV             reduce using rule 40 (comparison -> power .)
    LT              reduce using rule 40 (comparison -> power .)
    EQ              reduce using rule 40 (comparison -> power .)
    GT              reduce using rule 40 (comparison -> power .)
    COMMA           reduce using rule 40 (comparison -> power .)
    ASSIGN          reduce using rule 40 (comparison -> power .)
    NEWLINE         reduce using rule 40 (comparison -> power .)
    SEMICOLON       reduce using rule 40 (comparison -> power .)
    RPAR            reduce using rule 40 (comparison -> power .)
    COLON           reduce using rule 40 (comparison -> power .)


state 18

    (12) stmt -> simple_stmt .

    DEDENT          reduce using rule 12 (stmt -> simple_stmt .)
    IF              reduce using rule 12 (stmt -> simple_stmt .)
    DEF             reduce using rule 12 (stmt -> simple_stmt .)
    RETURN          reduce using rule 12 (stmt -> simple_stmt .)
    PLUS            reduce using rule 12 (stmt -> simple_stmt .)
    MINUS           reduce using rule 12 (stmt -> simple_stmt .)
    NAME            reduce using rule 12 (stmt -> simple_stmt .)
    NUMBER          reduce using rule 12 (stmt -> simple_stmt .)
    STRING          reduce using rule 12 (stmt -> simple_stmt .)
    LPAR            reduce using rule 12 (stmt -> simple_stmt .)
    END             reduce using rule 12 (stmt -> simple_stmt .)
    NEWLINE         reduce using rule 12 (stmt -> simple_stmt .)
    ENDMARKER       reduce using rule 12 (stmt -> simple_stmt .)


state 19

    (20) expr_stmt -> testlist . ASSIGN testlist
    (21) expr_stmt -> testlist .

    ASSIGN          shift and go to state 37
    NEWLINE         reduce using rule 21 (expr_stmt -> testlist .)
    SEMICOLON       reduce using rule 21 (expr_stmt -> testlist .)


state 20

    (5) file_input -> stmt .

    END             reduce using rule 5 (file_input -> stmt .)
    NEWLINE         reduce using rule 5 (file_input -> stmt .)
    IF              reduce using rule 5 (file_input -> stmt .)
    DEF             reduce using rule 5 (file_input -> stmt .)
    RETURN          reduce using rule 5 (file_input -> stmt .)
    PLUS            reduce using rule 5 (file_input -> stmt .)
    MINUS           reduce using rule 5 (file_input -> stmt .)
    NAME            reduce using rule 5 (file_input -> stmt .)
    NUMBER          reduce using rule 5 (file_input -> stmt .)
    STRING          reduce using rule 5 (file_input -> stmt .)
    LPAR            reduce using rule 5 (file_input -> stmt .)
    ENDMARKER       reduce using rule 5 (file_input -> stmt .)


state 21

    (48) testlist -> testlist_multi . COMMA
    (49) testlist -> testlist_multi .
    (50) testlist_multi -> testlist_multi . COMMA test

    COMMA           shift and go to state 38
    ASSIGN          reduce using rule 49 (testlist -> testlist_multi .)
    NEWLINE         reduce using rule 49 (testlist -> testlist_multi .)
    SEMICOLON       reduce using rule 49 (testlist -> testlist_multi .)
    RPAR            reduce using rule 49 (testlist -> testlist_multi .)


state 22

    (41) power -> atom .
    (42) power -> atom . trailer
    (47) trailer -> . LPAR arglist RPAR

    PLUS            reduce using rule 41 (power -> atom .)
    MINUS           reduce using rule 41 (power -> atom .)
    MULT            reduce using rule 41 (power -> atom .)
    DIV             reduce using rule 41 (power -> atom .)
    LT              reduce using rule 41 (power -> atom .)
    EQ              reduce using rule 41 (power -> atom .)
    GT              reduce using rule 41 (power -> atom .)
    COMMA           reduce using rule 41 (power -> atom .)
    ASSIGN          reduce using rule 41 (power -> atom .)
    NEWLINE         reduce using rule 41 (power -> atom .)
    SEMICOLON       reduce using rule 41 (power -> atom .)
    RPAR            reduce using rule 41 (power -> atom .)
    COLON           reduce using rule 41 (power -> atom .)
    LPAR            shift and go to state 39

    trailer                        shift and go to state 40

state 23

    (25) compound_stmt -> funcdef .

    END             reduce using rule 25 (compound_stmt -> funcdef .)
    NEWLINE         reduce using rule 25 (compound_stmt -> funcdef .)
    IF              reduce using rule 25 (compound_stmt -> funcdef .)
    DEF             reduce using rule 25 (compound_stmt -> funcdef .)
    RETURN          reduce using rule 25 (compound_stmt -> funcdef .)
    PLUS            reduce using rule 25 (compound_stmt -> funcdef .)
    MINUS           reduce using rule 25 (compound_stmt -> funcdef .)
    NAME            reduce using rule 25 (compound_stmt -> funcdef .)
    NUMBER          reduce using rule 25 (compound_stmt -> funcdef .)
    STRING          reduce using rule 25 (compound_stmt -> funcdef .)
    LPAR            reduce using rule 25 (compound_stmt -> funcdef .)
    ENDMARKER       reduce using rule 25 (compound_stmt -> funcdef .)
    DEDENT          reduce using rule 25 (compound_stmt -> funcdef .)


state 24

    (0) S' -> file_input_end .



state 25

    (43) atom -> NAME .

    LPAR            reduce using rule 43 (atom -> NAME .)
    PLUS            reduce using rule 43 (atom -> NAME .)
    MINUS           reduce using rule 43 (atom -> NAME .)
    MULT            reduce using rule 43 (atom -> NAME .)
    DIV             reduce using rule 43 (atom -> NAME .)
    LT              reduce using rule 43 (atom -> NAME .)
    EQ              reduce using rule 43 (atom -> NAME .)
    GT              reduce using rule 43 (atom -> NAME .)
    COMMA           reduce using rule 43 (atom -> NAME .)
    ASSIGN          reduce using rule 43 (atom -> NAME .)
    NEWLINE         reduce using rule 43 (atom -> NAME .)
    SEMICOLON       reduce using rule 43 (atom -> NAME .)
    RPAR            reduce using rule 43 (atom -> NAME .)
    COLON           reduce using rule 43 (atom -> NAME .)


state 26

    (52) test -> comparison .
    (31) comparison -> comparison . PLUS comparison
    (32) comparison -> comparison . MINUS comparison
    (33) comparison -> comparison . MULT comparison
    (34) comparison -> comparison . DIV comparison
    (35) comparison -> comparison . LT comparison
    (36) comparison -> comparison . EQ comparison
    (37) comparison -> comparison . GT comparison

    COMMA           reduce using rule 52 (test -> comparison .)
    ASSIGN          reduce using rule 52 (test -> comparison .)
    NEWLINE         reduce using rule 52 (test -> comparison .)
    SEMICOLON       reduce using rule 52 (test -> comparison .)
    RPAR            reduce using rule 52 (test -> comparison .)
    COLON           reduce using rule 52 (test -> comparison .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 46
    MULT            shift and go to state 47
    DIV             shift and go to state 44
    LT              shift and go to state 42
    EQ              shift and go to state 45
    GT              shift and go to state 41


state 27

    (24) compound_stmt -> if_stmt .

    END             reduce using rule 24 (compound_stmt -> if_stmt .)
    NEWLINE         reduce using rule 24 (compound_stmt -> if_stmt .)
    IF              reduce using rule 24 (compound_stmt -> if_stmt .)
    DEF             reduce using rule 24 (compound_stmt -> if_stmt .)
    RETURN          reduce using rule 24 (compound_stmt -> if_stmt .)
    PLUS            reduce using rule 24 (compound_stmt -> if_stmt .)
    MINUS           reduce using rule 24 (compound_stmt -> if_stmt .)
    NAME            reduce using rule 24 (compound_stmt -> if_stmt .)
    NUMBER          reduce using rule 24 (compound_stmt -> if_stmt .)
    STRING          reduce using rule 24 (compound_stmt -> if_stmt .)
    LPAR            reduce using rule 24 (compound_stmt -> if_stmt .)
    ENDMARKER       reduce using rule 24 (compound_stmt -> if_stmt .)
    DEDENT          reduce using rule 24 (compound_stmt -> if_stmt .)


state 28

    (1) file_input_end -> file_input . ENDMARKER
    (2) file_input -> file_input . NEWLINE
    (3) file_input -> file_input . stmt
    (12) stmt -> . simple_stmt
    (13) stmt -> . compound_stmt
    (14) simple_stmt -> . small_stmts NEWLINE
    (15) simple_stmt -> . small_stmts SEMICOLON NEWLINE
    (24) compound_stmt -> . if_stmt
    (25) compound_stmt -> . funcdef
    (16) small_stmts -> . small_stmts SEMICOLON small_stmt
    (17) small_stmts -> . small_stmt
    (26) if_stmt -> . IF test COLON suite
    (7) funcdef -> . DEF NAME parameters COLON suite
    (18) small_stmt -> . flow_stmt
    (19) small_stmt -> . expr_stmt
    (22) flow_stmt -> . return_stmt
    (20) expr_stmt -> . testlist ASSIGN testlist
    (21) expr_stmt -> . testlist
    (23) return_stmt -> . RETURN testlist
    (48) testlist -> . testlist_multi COMMA
    (49) testlist -> . testlist_multi
    (50) testlist_multi -> . testlist_multi COMMA test
    (51) testlist_multi -> . test
    (52) test -> . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    ENDMARKER       shift and go to state 48
    NEWLINE         shift and go to state 49
    IF              shift and go to state 14
    DEF             shift and go to state 7
    RETURN          shift and go to state 5
    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    flow_stmt                      shift and go to state 8
    comparison                     shift and go to state 26
    if_stmt                        shift and go to state 27
    simple_stmt                    shift and go to state 18
    testlist                       shift and go to state 19
    stmt                           shift and go to state 50
    testlist_multi                 shift and go to state 21
    small_stmt                     shift and go to state 2
    power                          shift and go to state 17
    test                           shift and go to state 13
    return_stmt                    shift and go to state 4
    atom                           shift and go to state 22
    funcdef                        shift and go to state 23
    expr_stmt                      shift and go to state 10
    compound_stmt                  shift and go to state 15
    small_stmts                    shift and go to state 29

state 29

    (14) simple_stmt -> small_stmts . NEWLINE
    (15) simple_stmt -> small_stmts . SEMICOLON NEWLINE
    (16) small_stmts -> small_stmts . SEMICOLON small_stmt

    NEWLINE         shift and go to state 51
    SEMICOLON       shift and go to state 52


state 30

    (46) atom -> LPAR testlist . RPAR

    RPAR            shift and go to state 53


state 31

    (23) return_stmt -> RETURN testlist .

    NEWLINE         reduce using rule 23 (return_stmt -> RETURN testlist .)
    SEMICOLON       reduce using rule 23 (return_stmt -> RETURN testlist .)


state 32

    (39) comparison -> MINUS comparison .
    (31) comparison -> comparison . PLUS comparison
    (32) comparison -> comparison . MINUS comparison
    (33) comparison -> comparison . MULT comparison
    (34) comparison -> comparison . DIV comparison
    (35) comparison -> comparison . LT comparison
    (36) comparison -> comparison . EQ comparison
    (37) comparison -> comparison . GT comparison

    PLUS            reduce using rule 39 (comparison -> MINUS comparison .)
    MINUS           reduce using rule 39 (comparison -> MINUS comparison .)
    LT              reduce using rule 39 (comparison -> MINUS comparison .)
    EQ              reduce using rule 39 (comparison -> MINUS comparison .)
    GT              reduce using rule 39 (comparison -> MINUS comparison .)
    COMMA           reduce using rule 39 (comparison -> MINUS comparison .)
    ASSIGN          reduce using rule 39 (comparison -> MINUS comparison .)
    NEWLINE         reduce using rule 39 (comparison -> MINUS comparison .)
    SEMICOLON       reduce using rule 39 (comparison -> MINUS comparison .)
    RPAR            reduce using rule 39 (comparison -> MINUS comparison .)
    COLON           reduce using rule 39 (comparison -> MINUS comparison .)
    MULT            shift and go to state 47
    DIV             shift and go to state 44

  ! MULT            [ reduce using rule 39 (comparison -> MINUS comparison .) ]
  ! DIV             [ reduce using rule 39 (comparison -> MINUS comparison .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 46 ]
  ! LT              [ shift and go to state 42 ]
  ! EQ              [ shift and go to state 45 ]
  ! GT              [ shift and go to state 41 ]


state 33

    (7) funcdef -> DEF NAME . parameters COLON suite
    (8) parameters -> . LPAR RPAR
    (9) parameters -> . LPAR varargslist RPAR

    LPAR            shift and go to state 54

    parameters                     shift and go to state 55

state 34

    (6) file_input -> BEGIN file_input . END
    (2) file_input -> file_input . NEWLINE
    (3) file_input -> file_input . stmt
    (12) stmt -> . simple_stmt
    (13) stmt -> . compound_stmt
    (14) simple_stmt -> . small_stmts NEWLINE
    (15) simple_stmt -> . small_stmts SEMICOLON NEWLINE
    (24) compound_stmt -> . if_stmt
    (25) compound_stmt -> . funcdef
    (16) small_stmts -> . small_stmts SEMICOLON small_stmt
    (17) small_stmts -> . small_stmt
    (26) if_stmt -> . IF test COLON suite
    (7) funcdef -> . DEF NAME parameters COLON suite
    (18) small_stmt -> . flow_stmt
    (19) small_stmt -> . expr_stmt
    (22) flow_stmt -> . return_stmt
    (20) expr_stmt -> . testlist ASSIGN testlist
    (21) expr_stmt -> . testlist
    (23) return_stmt -> . RETURN testlist
    (48) testlist -> . testlist_multi COMMA
    (49) testlist -> . testlist_multi
    (50) testlist_multi -> . testlist_multi COMMA test
    (51) testlist_multi -> . test
    (52) test -> . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    END             shift and go to state 56
    NEWLINE         shift and go to state 49
    IF              shift and go to state 14
    DEF             shift and go to state 7
    RETURN          shift and go to state 5
    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    flow_stmt                      shift and go to state 8
    comparison                     shift and go to state 26
    if_stmt                        shift and go to state 27
    simple_stmt                    shift and go to state 18
    testlist                       shift and go to state 19
    stmt                           shift and go to state 50
    testlist_multi                 shift and go to state 21
    small_stmt                     shift and go to state 2
    power                          shift and go to state 17
    test                           shift and go to state 13
    return_stmt                    shift and go to state 4
    atom                           shift and go to state 22
    funcdef                        shift and go to state 23
    expr_stmt                      shift and go to state 10
    compound_stmt                  shift and go to state 15
    small_stmts                    shift and go to state 29

state 35

    (38) comparison -> PLUS comparison .
    (31) comparison -> comparison . PLUS comparison
    (32) comparison -> comparison . MINUS comparison
    (33) comparison -> comparison . MULT comparison
    (34) comparison -> comparison . DIV comparison
    (35) comparison -> comparison . LT comparison
    (36) comparison -> comparison . EQ comparison
    (37) comparison -> comparison . GT comparison

    PLUS            reduce using rule 38 (comparison -> PLUS comparison .)
    MINUS           reduce using rule 38 (comparison -> PLUS comparison .)
    LT              reduce using rule 38 (comparison -> PLUS comparison .)
    EQ              reduce using rule 38 (comparison -> PLUS comparison .)
    GT              reduce using rule 38 (comparison -> PLUS comparison .)
    COMMA           reduce using rule 38 (comparison -> PLUS comparison .)
    ASSIGN          reduce using rule 38 (comparison -> PLUS comparison .)
    NEWLINE         reduce using rule 38 (comparison -> PLUS comparison .)
    SEMICOLON       reduce using rule 38 (comparison -> PLUS comparison .)
    RPAR            reduce using rule 38 (comparison -> PLUS comparison .)
    COLON           reduce using rule 38 (comparison -> PLUS comparison .)
    MULT            shift and go to state 47
    DIV             shift and go to state 44

  ! MULT            [ reduce using rule 38 (comparison -> PLUS comparison .) ]
  ! DIV             [ reduce using rule 38 (comparison -> PLUS comparison .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 46 ]
  ! LT              [ shift and go to state 42 ]
  ! EQ              [ shift and go to state 45 ]
  ! GT              [ shift and go to state 41 ]


state 36

    (26) if_stmt -> IF test . COLON suite

    COLON           shift and go to state 57


state 37

    (20) expr_stmt -> testlist ASSIGN . testlist
    (48) testlist -> . testlist_multi COMMA
    (49) testlist -> . testlist_multi
    (50) testlist_multi -> . testlist_multi COMMA test
    (51) testlist_multi -> . test
    (52) test -> . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    comparison                     shift and go to state 26
    power                          shift and go to state 17
    testlist                       shift and go to state 58
    testlist_multi                 shift and go to state 21
    atom                           shift and go to state 22
    test                           shift and go to state 13

state 38

    (48) testlist -> testlist_multi COMMA .
    (50) testlist_multi -> testlist_multi COMMA . test
    (52) test -> . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    ASSIGN          reduce using rule 48 (testlist -> testlist_multi COMMA .)
    NEWLINE         reduce using rule 48 (testlist -> testlist_multi COMMA .)
    SEMICOLON       reduce using rule 48 (testlist -> testlist_multi COMMA .)
    RPAR            reduce using rule 48 (testlist -> testlist_multi COMMA .)
    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    comparison                     shift and go to state 26
    power                          shift and go to state 17
    atom                           shift and go to state 22
    test                           shift and go to state 59

state 39

    (47) trailer -> LPAR . arglist RPAR
    (53) arglist -> . arglist COMMA argument
    (54) arglist -> . argument
    (55) argument -> . test
    (52) test -> . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    comparison                     shift and go to state 26
    power                          shift and go to state 17
    argument                       shift and go to state 60
    atom                           shift and go to state 22
    test                           shift and go to state 61
    arglist                        shift and go to state 62

state 40

    (42) power -> atom trailer .

    PLUS            reduce using rule 42 (power -> atom trailer .)
    MINUS           reduce using rule 42 (power -> atom trailer .)
    MULT            reduce using rule 42 (power -> atom trailer .)
    DIV             reduce using rule 42 (power -> atom trailer .)
    LT              reduce using rule 42 (power -> atom trailer .)
    EQ              reduce using rule 42 (power -> atom trailer .)
    GT              reduce using rule 42 (power -> atom trailer .)
    COMMA           reduce using rule 42 (power -> atom trailer .)
    ASSIGN          reduce using rule 42 (power -> atom trailer .)
    NEWLINE         reduce using rule 42 (power -> atom trailer .)
    SEMICOLON       reduce using rule 42 (power -> atom trailer .)
    RPAR            reduce using rule 42 (power -> atom trailer .)
    COLON           reduce using rule 42 (power -> atom trailer .)


state 41

    (37) comparison -> comparison GT . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    comparison                     shift and go to state 63
    power                          shift and go to state 17
    atom                           shift and go to state 22

state 42

    (35) comparison -> comparison LT . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    comparison                     shift and go to state 64
    power                          shift and go to state 17
    atom                           shift and go to state 22

state 43

    (31) comparison -> comparison PLUS . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    comparison                     shift and go to state 65
    power                          shift and go to state 17
    atom                           shift and go to state 22

state 44

    (34) comparison -> comparison DIV . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    comparison                     shift and go to state 66
    power                          shift and go to state 17
    atom                           shift and go to state 22

state 45

    (36) comparison -> comparison EQ . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    comparison                     shift and go to state 67
    power                          shift and go to state 17
    atom                           shift and go to state 22

state 46

    (32) comparison -> comparison MINUS . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    comparison                     shift and go to state 68
    power                          shift and go to state 17
    atom                           shift and go to state 22

state 47

    (33) comparison -> comparison MULT . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    comparison                     shift and go to state 69
    power                          shift and go to state 17
    atom                           shift and go to state 22

state 48

    (1) file_input_end -> file_input ENDMARKER .

    $end            reduce using rule 1 (file_input_end -> file_input ENDMARKER .)


state 49

    (2) file_input -> file_input NEWLINE .

    END             reduce using rule 2 (file_input -> file_input NEWLINE .)
    NEWLINE         reduce using rule 2 (file_input -> file_input NEWLINE .)
    IF              reduce using rule 2 (file_input -> file_input NEWLINE .)
    DEF             reduce using rule 2 (file_input -> file_input NEWLINE .)
    RETURN          reduce using rule 2 (file_input -> file_input NEWLINE .)
    PLUS            reduce using rule 2 (file_input -> file_input NEWLINE .)
    MINUS           reduce using rule 2 (file_input -> file_input NEWLINE .)
    NAME            reduce using rule 2 (file_input -> file_input NEWLINE .)
    NUMBER          reduce using rule 2 (file_input -> file_input NEWLINE .)
    STRING          reduce using rule 2 (file_input -> file_input NEWLINE .)
    LPAR            reduce using rule 2 (file_input -> file_input NEWLINE .)
    ENDMARKER       reduce using rule 2 (file_input -> file_input NEWLINE .)


state 50

    (3) file_input -> file_input stmt .

    END             reduce using rule 3 (file_input -> file_input stmt .)
    NEWLINE         reduce using rule 3 (file_input -> file_input stmt .)
    IF              reduce using rule 3 (file_input -> file_input stmt .)
    DEF             reduce using rule 3 (file_input -> file_input stmt .)
    RETURN          reduce using rule 3 (file_input -> file_input stmt .)
    PLUS            reduce using rule 3 (file_input -> file_input stmt .)
    MINUS           reduce using rule 3 (file_input -> file_input stmt .)
    NAME            reduce using rule 3 (file_input -> file_input stmt .)
    NUMBER          reduce using rule 3 (file_input -> file_input stmt .)
    STRING          reduce using rule 3 (file_input -> file_input stmt .)
    LPAR            reduce using rule 3 (file_input -> file_input stmt .)
    ENDMARKER       reduce using rule 3 (file_input -> file_input stmt .)


state 51

    (14) simple_stmt -> small_stmts NEWLINE .

    DEDENT          reduce using rule 14 (simple_stmt -> small_stmts NEWLINE .)
    IF              reduce using rule 14 (simple_stmt -> small_stmts NEWLINE .)
    DEF             reduce using rule 14 (simple_stmt -> small_stmts NEWLINE .)
    RETURN          reduce using rule 14 (simple_stmt -> small_stmts NEWLINE .)
    PLUS            reduce using rule 14 (simple_stmt -> small_stmts NEWLINE .)
    MINUS           reduce using rule 14 (simple_stmt -> small_stmts NEWLINE .)
    NAME            reduce using rule 14 (simple_stmt -> small_stmts NEWLINE .)
    NUMBER          reduce using rule 14 (simple_stmt -> small_stmts NEWLINE .)
    STRING          reduce using rule 14 (simple_stmt -> small_stmts NEWLINE .)
    LPAR            reduce using rule 14 (simple_stmt -> small_stmts NEWLINE .)
    END             reduce using rule 14 (simple_stmt -> small_stmts NEWLINE .)
    NEWLINE         reduce using rule 14 (simple_stmt -> small_stmts NEWLINE .)
    ENDMARKER       reduce using rule 14 (simple_stmt -> small_stmts NEWLINE .)


state 52

    (15) simple_stmt -> small_stmts SEMICOLON . NEWLINE
    (16) small_stmts -> small_stmts SEMICOLON . small_stmt
    (18) small_stmt -> . flow_stmt
    (19) small_stmt -> . expr_stmt
    (22) flow_stmt -> . return_stmt
    (20) expr_stmt -> . testlist ASSIGN testlist
    (21) expr_stmt -> . testlist
    (23) return_stmt -> . RETURN testlist
    (48) testlist -> . testlist_multi COMMA
    (49) testlist -> . testlist_multi
    (50) testlist_multi -> . testlist_multi COMMA test
    (51) testlist_multi -> . test
    (52) test -> . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    NEWLINE         shift and go to state 71
    RETURN          shift and go to state 5
    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    flow_stmt                      shift and go to state 8
    comparison                     shift and go to state 26
    power                          shift and go to state 17
    small_stmt                     shift and go to state 70
    testlist                       shift and go to state 19
    return_stmt                    shift and go to state 4
    atom                           shift and go to state 22
    test                           shift and go to state 13
    testlist_multi                 shift and go to state 21
    expr_stmt                      shift and go to state 10

state 53

    (46) atom -> LPAR testlist RPAR .

    LPAR            reduce using rule 46 (atom -> LPAR testlist RPAR .)
    PLUS            reduce using rule 46 (atom -> LPAR testlist RPAR .)
    MINUS           reduce using rule 46 (atom -> LPAR testlist RPAR .)
    MULT            reduce using rule 46 (atom -> LPAR testlist RPAR .)
    DIV             reduce using rule 46 (atom -> LPAR testlist RPAR .)
    LT              reduce using rule 46 (atom -> LPAR testlist RPAR .)
    EQ              reduce using rule 46 (atom -> LPAR testlist RPAR .)
    GT              reduce using rule 46 (atom -> LPAR testlist RPAR .)
    COMMA           reduce using rule 46 (atom -> LPAR testlist RPAR .)
    ASSIGN          reduce using rule 46 (atom -> LPAR testlist RPAR .)
    NEWLINE         reduce using rule 46 (atom -> LPAR testlist RPAR .)
    SEMICOLON       reduce using rule 46 (atom -> LPAR testlist RPAR .)
    RPAR            reduce using rule 46 (atom -> LPAR testlist RPAR .)
    COLON           reduce using rule 46 (atom -> LPAR testlist RPAR .)


state 54

    (8) parameters -> LPAR . RPAR
    (9) parameters -> LPAR . varargslist RPAR
    (10) varargslist -> . varargslist COMMA NAME
    (11) varargslist -> . NAME

    RPAR            shift and go to state 74
    NAME            shift and go to state 73

    varargslist                    shift and go to state 72

state 55

    (7) funcdef -> DEF NAME parameters . COLON suite

    COLON           shift and go to state 75


state 56

    (6) file_input -> BEGIN file_input END .

    END             reduce using rule 6 (file_input -> BEGIN file_input END .)
    NEWLINE         reduce using rule 6 (file_input -> BEGIN file_input END .)
    IF              reduce using rule 6 (file_input -> BEGIN file_input END .)
    DEF             reduce using rule 6 (file_input -> BEGIN file_input END .)
    RETURN          reduce using rule 6 (file_input -> BEGIN file_input END .)
    PLUS            reduce using rule 6 (file_input -> BEGIN file_input END .)
    MINUS           reduce using rule 6 (file_input -> BEGIN file_input END .)
    NAME            reduce using rule 6 (file_input -> BEGIN file_input END .)
    NUMBER          reduce using rule 6 (file_input -> BEGIN file_input END .)
    STRING          reduce using rule 6 (file_input -> BEGIN file_input END .)
    LPAR            reduce using rule 6 (file_input -> BEGIN file_input END .)
    ENDMARKER       reduce using rule 6 (file_input -> BEGIN file_input END .)


state 57

    (26) if_stmt -> IF test COLON . suite
    (27) suite -> . simple_stmt
    (28) suite -> . NEWLINE INDENT stmts DEDENT
    (14) simple_stmt -> . small_stmts NEWLINE
    (15) simple_stmt -> . small_stmts SEMICOLON NEWLINE
    (16) small_stmts -> . small_stmts SEMICOLON small_stmt
    (17) small_stmts -> . small_stmt
    (18) small_stmt -> . flow_stmt
    (19) small_stmt -> . expr_stmt
    (22) flow_stmt -> . return_stmt
    (20) expr_stmt -> . testlist ASSIGN testlist
    (21) expr_stmt -> . testlist
    (23) return_stmt -> . RETURN testlist
    (48) testlist -> . testlist_multi COMMA
    (49) testlist -> . testlist_multi
    (50) testlist_multi -> . testlist_multi COMMA test
    (51) testlist_multi -> . test
    (52) test -> . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    NEWLINE         shift and go to state 76
    RETURN          shift and go to state 5
    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    flow_stmt                      shift and go to state 8
    comparison                     shift and go to state 26
    power                          shift and go to state 17
    small_stmt                     shift and go to state 2
    simple_stmt                    shift and go to state 77
    testlist                       shift and go to state 19
    testlist_multi                 shift and go to state 21
    return_stmt                    shift and go to state 4
    atom                           shift and go to state 22
    test                           shift and go to state 13
    suite                          shift and go to state 78
    expr_stmt                      shift and go to state 10
    small_stmts                    shift and go to state 29

state 58

    (20) expr_stmt -> testlist ASSIGN testlist .

    NEWLINE         reduce using rule 20 (expr_stmt -> testlist ASSIGN testlist .)
    SEMICOLON       reduce using rule 20 (expr_stmt -> testlist ASSIGN testlist .)


state 59

    (50) testlist_multi -> testlist_multi COMMA test .

    COMMA           reduce using rule 50 (testlist_multi -> testlist_multi COMMA test .)
    ASSIGN          reduce using rule 50 (testlist_multi -> testlist_multi COMMA test .)
    NEWLINE         reduce using rule 50 (testlist_multi -> testlist_multi COMMA test .)
    SEMICOLON       reduce using rule 50 (testlist_multi -> testlist_multi COMMA test .)
    RPAR            reduce using rule 50 (testlist_multi -> testlist_multi COMMA test .)


state 60

    (54) arglist -> argument .

    RPAR            reduce using rule 54 (arglist -> argument .)
    COMMA           reduce using rule 54 (arglist -> argument .)


state 61

    (55) argument -> test .

    RPAR            reduce using rule 55 (argument -> test .)
    COMMA           reduce using rule 55 (argument -> test .)


state 62

    (47) trailer -> LPAR arglist . RPAR
    (53) arglist -> arglist . COMMA argument

    RPAR            shift and go to state 80
    COMMA           shift and go to state 79


state 63

    (37) comparison -> comparison GT comparison .
    (31) comparison -> comparison . PLUS comparison
    (32) comparison -> comparison . MINUS comparison
    (33) comparison -> comparison . MULT comparison
    (34) comparison -> comparison . DIV comparison
    (35) comparison -> comparison . LT comparison
    (36) comparison -> comparison . EQ comparison
    (37) comparison -> comparison . GT comparison

    LT              reduce using rule 37 (comparison -> comparison GT comparison .)
    EQ              reduce using rule 37 (comparison -> comparison GT comparison .)
    GT              reduce using rule 37 (comparison -> comparison GT comparison .)
    COMMA           reduce using rule 37 (comparison -> comparison GT comparison .)
    ASSIGN          reduce using rule 37 (comparison -> comparison GT comparison .)
    NEWLINE         reduce using rule 37 (comparison -> comparison GT comparison .)
    SEMICOLON       reduce using rule 37 (comparison -> comparison GT comparison .)
    RPAR            reduce using rule 37 (comparison -> comparison GT comparison .)
    COLON           reduce using rule 37 (comparison -> comparison GT comparison .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 46
    MULT            shift and go to state 47
    DIV             shift and go to state 44

  ! PLUS            [ reduce using rule 37 (comparison -> comparison GT comparison .) ]
  ! MINUS           [ reduce using rule 37 (comparison -> comparison GT comparison .) ]
  ! MULT            [ reduce using rule 37 (comparison -> comparison GT comparison .) ]
  ! DIV             [ reduce using rule 37 (comparison -> comparison GT comparison .) ]
  ! LT              [ shift and go to state 42 ]
  ! EQ              [ shift and go to state 45 ]
  ! GT              [ shift and go to state 41 ]


state 64

    (35) comparison -> comparison LT comparison .
    (31) comparison -> comparison . PLUS comparison
    (32) comparison -> comparison . MINUS comparison
    (33) comparison -> comparison . MULT comparison
    (34) comparison -> comparison . DIV comparison
    (35) comparison -> comparison . LT comparison
    (36) comparison -> comparison . EQ comparison
    (37) comparison -> comparison . GT comparison

    LT              reduce using rule 35 (comparison -> comparison LT comparison .)
    EQ              reduce using rule 35 (comparison -> comparison LT comparison .)
    GT              reduce using rule 35 (comparison -> comparison LT comparison .)
    COMMA           reduce using rule 35 (comparison -> comparison LT comparison .)
    ASSIGN          reduce using rule 35 (comparison -> comparison LT comparison .)
    NEWLINE         reduce using rule 35 (comparison -> comparison LT comparison .)
    SEMICOLON       reduce using rule 35 (comparison -> comparison LT comparison .)
    RPAR            reduce using rule 35 (comparison -> comparison LT comparison .)
    COLON           reduce using rule 35 (comparison -> comparison LT comparison .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 46
    MULT            shift and go to state 47
    DIV             shift and go to state 44

  ! PLUS            [ reduce using rule 35 (comparison -> comparison LT comparison .) ]
  ! MINUS           [ reduce using rule 35 (comparison -> comparison LT comparison .) ]
  ! MULT            [ reduce using rule 35 (comparison -> comparison LT comparison .) ]
  ! DIV             [ reduce using rule 35 (comparison -> comparison LT comparison .) ]
  ! LT              [ shift and go to state 42 ]
  ! EQ              [ shift and go to state 45 ]
  ! GT              [ shift and go to state 41 ]


state 65

    (31) comparison -> comparison PLUS comparison .
    (31) comparison -> comparison . PLUS comparison
    (32) comparison -> comparison . MINUS comparison
    (33) comparison -> comparison . MULT comparison
    (34) comparison -> comparison . DIV comparison
    (35) comparison -> comparison . LT comparison
    (36) comparison -> comparison . EQ comparison
    (37) comparison -> comparison . GT comparison

    PLUS            reduce using rule 31 (comparison -> comparison PLUS comparison .)
    MINUS           reduce using rule 31 (comparison -> comparison PLUS comparison .)
    LT              reduce using rule 31 (comparison -> comparison PLUS comparison .)
    EQ              reduce using rule 31 (comparison -> comparison PLUS comparison .)
    GT              reduce using rule 31 (comparison -> comparison PLUS comparison .)
    COMMA           reduce using rule 31 (comparison -> comparison PLUS comparison .)
    ASSIGN          reduce using rule 31 (comparison -> comparison PLUS comparison .)
    NEWLINE         reduce using rule 31 (comparison -> comparison PLUS comparison .)
    SEMICOLON       reduce using rule 31 (comparison -> comparison PLUS comparison .)
    RPAR            reduce using rule 31 (comparison -> comparison PLUS comparison .)
    COLON           reduce using rule 31 (comparison -> comparison PLUS comparison .)
    MULT            shift and go to state 47
    DIV             shift and go to state 44

  ! MULT            [ reduce using rule 31 (comparison -> comparison PLUS comparison .) ]
  ! DIV             [ reduce using rule 31 (comparison -> comparison PLUS comparison .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 46 ]
  ! LT              [ shift and go to state 42 ]
  ! EQ              [ shift and go to state 45 ]
  ! GT              [ shift and go to state 41 ]


state 66

    (34) comparison -> comparison DIV comparison .
    (31) comparison -> comparison . PLUS comparison
    (32) comparison -> comparison . MINUS comparison
    (33) comparison -> comparison . MULT comparison
    (34) comparison -> comparison . DIV comparison
    (35) comparison -> comparison . LT comparison
    (36) comparison -> comparison . EQ comparison
    (37) comparison -> comparison . GT comparison

    PLUS            reduce using rule 34 (comparison -> comparison DIV comparison .)
    MINUS           reduce using rule 34 (comparison -> comparison DIV comparison .)
    MULT            reduce using rule 34 (comparison -> comparison DIV comparison .)
    DIV             reduce using rule 34 (comparison -> comparison DIV comparison .)
    LT              reduce using rule 34 (comparison -> comparison DIV comparison .)
    EQ              reduce using rule 34 (comparison -> comparison DIV comparison .)
    GT              reduce using rule 34 (comparison -> comparison DIV comparison .)
    COMMA           reduce using rule 34 (comparison -> comparison DIV comparison .)
    ASSIGN          reduce using rule 34 (comparison -> comparison DIV comparison .)
    NEWLINE         reduce using rule 34 (comparison -> comparison DIV comparison .)
    SEMICOLON       reduce using rule 34 (comparison -> comparison DIV comparison .)
    RPAR            reduce using rule 34 (comparison -> comparison DIV comparison .)
    COLON           reduce using rule 34 (comparison -> comparison DIV comparison .)

  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 46 ]
  ! MULT            [ shift and go to state 47 ]
  ! DIV             [ shift and go to state 44 ]
  ! LT              [ shift and go to state 42 ]
  ! EQ              [ shift and go to state 45 ]
  ! GT              [ shift and go to state 41 ]


state 67

    (36) comparison -> comparison EQ comparison .
    (31) comparison -> comparison . PLUS comparison
    (32) comparison -> comparison . MINUS comparison
    (33) comparison -> comparison . MULT comparison
    (34) comparison -> comparison . DIV comparison
    (35) comparison -> comparison . LT comparison
    (36) comparison -> comparison . EQ comparison
    (37) comparison -> comparison . GT comparison

    LT              reduce using rule 36 (comparison -> comparison EQ comparison .)
    EQ              reduce using rule 36 (comparison -> comparison EQ comparison .)
    GT              reduce using rule 36 (comparison -> comparison EQ comparison .)
    COMMA           reduce using rule 36 (comparison -> comparison EQ comparison .)
    ASSIGN          reduce using rule 36 (comparison -> comparison EQ comparison .)
    NEWLINE         reduce using rule 36 (comparison -> comparison EQ comparison .)
    SEMICOLON       reduce using rule 36 (comparison -> comparison EQ comparison .)
    RPAR            reduce using rule 36 (comparison -> comparison EQ comparison .)
    COLON           reduce using rule 36 (comparison -> comparison EQ comparison .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 46
    MULT            shift and go to state 47
    DIV             shift and go to state 44

  ! PLUS            [ reduce using rule 36 (comparison -> comparison EQ comparison .) ]
  ! MINUS           [ reduce using rule 36 (comparison -> comparison EQ comparison .) ]
  ! MULT            [ reduce using rule 36 (comparison -> comparison EQ comparison .) ]
  ! DIV             [ reduce using rule 36 (comparison -> comparison EQ comparison .) ]
  ! LT              [ shift and go to state 42 ]
  ! EQ              [ shift and go to state 45 ]
  ! GT              [ shift and go to state 41 ]


state 68

    (32) comparison -> comparison MINUS comparison .
    (31) comparison -> comparison . PLUS comparison
    (32) comparison -> comparison . MINUS comparison
    (33) comparison -> comparison . MULT comparison
    (34) comparison -> comparison . DIV comparison
    (35) comparison -> comparison . LT comparison
    (36) comparison -> comparison . EQ comparison
    (37) comparison -> comparison . GT comparison

    PLUS            reduce using rule 32 (comparison -> comparison MINUS comparison .)
    MINUS           reduce using rule 32 (comparison -> comparison MINUS comparison .)
    LT              reduce using rule 32 (comparison -> comparison MINUS comparison .)
    EQ              reduce using rule 32 (comparison -> comparison MINUS comparison .)
    GT              reduce using rule 32 (comparison -> comparison MINUS comparison .)
    COMMA           reduce using rule 32 (comparison -> comparison MINUS comparison .)
    ASSIGN          reduce using rule 32 (comparison -> comparison MINUS comparison .)
    NEWLINE         reduce using rule 32 (comparison -> comparison MINUS comparison .)
    SEMICOLON       reduce using rule 32 (comparison -> comparison MINUS comparison .)
    RPAR            reduce using rule 32 (comparison -> comparison MINUS comparison .)
    COLON           reduce using rule 32 (comparison -> comparison MINUS comparison .)
    MULT            shift and go to state 47
    DIV             shift and go to state 44

  ! MULT            [ reduce using rule 32 (comparison -> comparison MINUS comparison .) ]
  ! DIV             [ reduce using rule 32 (comparison -> comparison MINUS comparison .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 46 ]
  ! LT              [ shift and go to state 42 ]
  ! EQ              [ shift and go to state 45 ]
  ! GT              [ shift and go to state 41 ]


state 69

    (33) comparison -> comparison MULT comparison .
    (31) comparison -> comparison . PLUS comparison
    (32) comparison -> comparison . MINUS comparison
    (33) comparison -> comparison . MULT comparison
    (34) comparison -> comparison . DIV comparison
    (35) comparison -> comparison . LT comparison
    (36) comparison -> comparison . EQ comparison
    (37) comparison -> comparison . GT comparison

    PLUS            reduce using rule 33 (comparison -> comparison MULT comparison .)
    MINUS           reduce using rule 33 (comparison -> comparison MULT comparison .)
    MULT            reduce using rule 33 (comparison -> comparison MULT comparison .)
    DIV             reduce using rule 33 (comparison -> comparison MULT comparison .)
    LT              reduce using rule 33 (comparison -> comparison MULT comparison .)
    EQ              reduce using rule 33 (comparison -> comparison MULT comparison .)
    GT              reduce using rule 33 (comparison -> comparison MULT comparison .)
    COMMA           reduce using rule 33 (comparison -> comparison MULT comparison .)
    ASSIGN          reduce using rule 33 (comparison -> comparison MULT comparison .)
    NEWLINE         reduce using rule 33 (comparison -> comparison MULT comparison .)
    SEMICOLON       reduce using rule 33 (comparison -> comparison MULT comparison .)
    RPAR            reduce using rule 33 (comparison -> comparison MULT comparison .)
    COLON           reduce using rule 33 (comparison -> comparison MULT comparison .)

  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 46 ]
  ! MULT            [ shift and go to state 47 ]
  ! DIV             [ shift and go to state 44 ]
  ! LT              [ shift and go to state 42 ]
  ! EQ              [ shift and go to state 45 ]
  ! GT              [ shift and go to state 41 ]


state 70

    (16) small_stmts -> small_stmts SEMICOLON small_stmt .

    NEWLINE         reduce using rule 16 (small_stmts -> small_stmts SEMICOLON small_stmt .)
    SEMICOLON       reduce using rule 16 (small_stmts -> small_stmts SEMICOLON small_stmt .)


state 71

    (15) simple_stmt -> small_stmts SEMICOLON NEWLINE .

    DEDENT          reduce using rule 15 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)
    IF              reduce using rule 15 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)
    DEF             reduce using rule 15 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)
    RETURN          reduce using rule 15 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)
    PLUS            reduce using rule 15 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)
    MINUS           reduce using rule 15 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)
    NAME            reduce using rule 15 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)
    NUMBER          reduce using rule 15 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)
    STRING          reduce using rule 15 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)
    LPAR            reduce using rule 15 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)
    END             reduce using rule 15 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)
    NEWLINE         reduce using rule 15 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)
    ENDMARKER       reduce using rule 15 (simple_stmt -> small_stmts SEMICOLON NEWLINE .)


state 72

    (9) parameters -> LPAR varargslist . RPAR
    (10) varargslist -> varargslist . COMMA NAME

    RPAR            shift and go to state 82
    COMMA           shift and go to state 81


state 73

    (11) varargslist -> NAME .

    RPAR            reduce using rule 11 (varargslist -> NAME .)
    COMMA           reduce using rule 11 (varargslist -> NAME .)


state 74

    (8) parameters -> LPAR RPAR .

    COLON           reduce using rule 8 (parameters -> LPAR RPAR .)


state 75

    (7) funcdef -> DEF NAME parameters COLON . suite
    (27) suite -> . simple_stmt
    (28) suite -> . NEWLINE INDENT stmts DEDENT
    (14) simple_stmt -> . small_stmts NEWLINE
    (15) simple_stmt -> . small_stmts SEMICOLON NEWLINE
    (16) small_stmts -> . small_stmts SEMICOLON small_stmt
    (17) small_stmts -> . small_stmt
    (18) small_stmt -> . flow_stmt
    (19) small_stmt -> . expr_stmt
    (22) flow_stmt -> . return_stmt
    (20) expr_stmt -> . testlist ASSIGN testlist
    (21) expr_stmt -> . testlist
    (23) return_stmt -> . RETURN testlist
    (48) testlist -> . testlist_multi COMMA
    (49) testlist -> . testlist_multi
    (50) testlist_multi -> . testlist_multi COMMA test
    (51) testlist_multi -> . test
    (52) test -> . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    NEWLINE         shift and go to state 76
    RETURN          shift and go to state 5
    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    flow_stmt                      shift and go to state 8
    comparison                     shift and go to state 26
    expr_stmt                      shift and go to state 10
    power                          shift and go to state 17
    simple_stmt                    shift and go to state 77
    testlist                       shift and go to state 19
    small_stmt                     shift and go to state 2
    test                           shift and go to state 13
    return_stmt                    shift and go to state 4
    atom                           shift and go to state 22
    testlist_multi                 shift and go to state 21
    suite                          shift and go to state 83
    small_stmts                    shift and go to state 29

state 76

    (28) suite -> NEWLINE . INDENT stmts DEDENT

    INDENT          shift and go to state 84


state 77

    (27) suite -> simple_stmt .

    ENDMARKER       reduce using rule 27 (suite -> simple_stmt .)
    NEWLINE         reduce using rule 27 (suite -> simple_stmt .)
    IF              reduce using rule 27 (suite -> simple_stmt .)
    DEF             reduce using rule 27 (suite -> simple_stmt .)
    RETURN          reduce using rule 27 (suite -> simple_stmt .)
    PLUS            reduce using rule 27 (suite -> simple_stmt .)
    MINUS           reduce using rule 27 (suite -> simple_stmt .)
    NAME            reduce using rule 27 (suite -> simple_stmt .)
    NUMBER          reduce using rule 27 (suite -> simple_stmt .)
    STRING          reduce using rule 27 (suite -> simple_stmt .)
    LPAR            reduce using rule 27 (suite -> simple_stmt .)
    END             reduce using rule 27 (suite -> simple_stmt .)
    DEDENT          reduce using rule 27 (suite -> simple_stmt .)


state 78

    (26) if_stmt -> IF test COLON suite .

    END             reduce using rule 26 (if_stmt -> IF test COLON suite .)
    NEWLINE         reduce using rule 26 (if_stmt -> IF test COLON suite .)
    IF              reduce using rule 26 (if_stmt -> IF test COLON suite .)
    DEF             reduce using rule 26 (if_stmt -> IF test COLON suite .)
    RETURN          reduce using rule 26 (if_stmt -> IF test COLON suite .)
    PLUS            reduce using rule 26 (if_stmt -> IF test COLON suite .)
    MINUS           reduce using rule 26 (if_stmt -> IF test COLON suite .)
    NAME            reduce using rule 26 (if_stmt -> IF test COLON suite .)
    NUMBER          reduce using rule 26 (if_stmt -> IF test COLON suite .)
    STRING          reduce using rule 26 (if_stmt -> IF test COLON suite .)
    LPAR            reduce using rule 26 (if_stmt -> IF test COLON suite .)
    DEDENT          reduce using rule 26 (if_stmt -> IF test COLON suite .)
    ENDMARKER       reduce using rule 26 (if_stmt -> IF test COLON suite .)


state 79

    (53) arglist -> arglist COMMA . argument
    (55) argument -> . test
    (52) test -> . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    comparison                     shift and go to state 26
    power                          shift and go to state 17
    argument                       shift and go to state 85
    atom                           shift and go to state 22
    test                           shift and go to state 61

state 80

    (47) trailer -> LPAR arglist RPAR .

    PLUS            reduce using rule 47 (trailer -> LPAR arglist RPAR .)
    MINUS           reduce using rule 47 (trailer -> LPAR arglist RPAR .)
    MULT            reduce using rule 47 (trailer -> LPAR arglist RPAR .)
    DIV             reduce using rule 47 (trailer -> LPAR arglist RPAR .)
    LT              reduce using rule 47 (trailer -> LPAR arglist RPAR .)
    EQ              reduce using rule 47 (trailer -> LPAR arglist RPAR .)
    GT              reduce using rule 47 (trailer -> LPAR arglist RPAR .)
    COMMA           reduce using rule 47 (trailer -> LPAR arglist RPAR .)
    ASSIGN          reduce using rule 47 (trailer -> LPAR arglist RPAR .)
    NEWLINE         reduce using rule 47 (trailer -> LPAR arglist RPAR .)
    SEMICOLON       reduce using rule 47 (trailer -> LPAR arglist RPAR .)
    RPAR            reduce using rule 47 (trailer -> LPAR arglist RPAR .)
    COLON           reduce using rule 47 (trailer -> LPAR arglist RPAR .)


state 81

    (10) varargslist -> varargslist COMMA . NAME

    NAME            shift and go to state 86


state 82

    (9) parameters -> LPAR varargslist RPAR .

    COLON           reduce using rule 9 (parameters -> LPAR varargslist RPAR .)


state 83

    (7) funcdef -> DEF NAME parameters COLON suite .

    END             reduce using rule 7 (funcdef -> DEF NAME parameters COLON suite .)
    NEWLINE         reduce using rule 7 (funcdef -> DEF NAME parameters COLON suite .)
    IF              reduce using rule 7 (funcdef -> DEF NAME parameters COLON suite .)
    DEF             reduce using rule 7 (funcdef -> DEF NAME parameters COLON suite .)
    RETURN          reduce using rule 7 (funcdef -> DEF NAME parameters COLON suite .)
    PLUS            reduce using rule 7 (funcdef -> DEF NAME parameters COLON suite .)
    MINUS           reduce using rule 7 (funcdef -> DEF NAME parameters COLON suite .)
    NAME            reduce using rule 7 (funcdef -> DEF NAME parameters COLON suite .)
    NUMBER          reduce using rule 7 (funcdef -> DEF NAME parameters COLON suite .)
    STRING          reduce using rule 7 (funcdef -> DEF NAME parameters COLON suite .)
    LPAR            reduce using rule 7 (funcdef -> DEF NAME parameters COLON suite .)
    ENDMARKER       reduce using rule 7 (funcdef -> DEF NAME parameters COLON suite .)
    DEDENT          reduce using rule 7 (funcdef -> DEF NAME parameters COLON suite .)


state 84

    (28) suite -> NEWLINE INDENT . stmts DEDENT
    (29) stmts -> . stmts stmt
    (30) stmts -> . stmt
    (12) stmt -> . simple_stmt
    (13) stmt -> . compound_stmt
    (14) simple_stmt -> . small_stmts NEWLINE
    (15) simple_stmt -> . small_stmts SEMICOLON NEWLINE
    (24) compound_stmt -> . if_stmt
    (25) compound_stmt -> . funcdef
    (16) small_stmts -> . small_stmts SEMICOLON small_stmt
    (17) small_stmts -> . small_stmt
    (26) if_stmt -> . IF test COLON suite
    (7) funcdef -> . DEF NAME parameters COLON suite
    (18) small_stmt -> . flow_stmt
    (19) small_stmt -> . expr_stmt
    (22) flow_stmt -> . return_stmt
    (20) expr_stmt -> . testlist ASSIGN testlist
    (21) expr_stmt -> . testlist
    (23) return_stmt -> . RETURN testlist
    (48) testlist -> . testlist_multi COMMA
    (49) testlist -> . testlist_multi
    (50) testlist_multi -> . testlist_multi COMMA test
    (51) testlist_multi -> . test
    (52) test -> . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    IF              shift and go to state 14
    DEF             shift and go to state 7
    RETURN          shift and go to state 5
    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    flow_stmt                      shift and go to state 8
    comparison                     shift and go to state 26
    expr_stmt                      shift and go to state 10
    if_stmt                        shift and go to state 27
    small_stmt                     shift and go to state 2
    stmts                          shift and go to state 87
    testlist                       shift and go to state 19
    stmt                           shift and go to state 88
    testlist_multi                 shift and go to state 21
    simple_stmt                    shift and go to state 18
    power                          shift and go to state 17
    test                           shift and go to state 13
    return_stmt                    shift and go to state 4
    atom                           shift and go to state 22
    funcdef                        shift and go to state 23
    compound_stmt                  shift and go to state 15
    small_stmts                    shift and go to state 29

state 85

    (53) arglist -> arglist COMMA argument .

    RPAR            reduce using rule 53 (arglist -> arglist COMMA argument .)
    COMMA           reduce using rule 53 (arglist -> arglist COMMA argument .)


state 86

    (10) varargslist -> varargslist COMMA NAME .

    RPAR            reduce using rule 10 (varargslist -> varargslist COMMA NAME .)
    COMMA           reduce using rule 10 (varargslist -> varargslist COMMA NAME .)


state 87

    (28) suite -> NEWLINE INDENT stmts . DEDENT
    (29) stmts -> stmts . stmt
    (12) stmt -> . simple_stmt
    (13) stmt -> . compound_stmt
    (14) simple_stmt -> . small_stmts NEWLINE
    (15) simple_stmt -> . small_stmts SEMICOLON NEWLINE
    (24) compound_stmt -> . if_stmt
    (25) compound_stmt -> . funcdef
    (16) small_stmts -> . small_stmts SEMICOLON small_stmt
    (17) small_stmts -> . small_stmt
    (26) if_stmt -> . IF test COLON suite
    (7) funcdef -> . DEF NAME parameters COLON suite
    (18) small_stmt -> . flow_stmt
    (19) small_stmt -> . expr_stmt
    (22) flow_stmt -> . return_stmt
    (20) expr_stmt -> . testlist ASSIGN testlist
    (21) expr_stmt -> . testlist
    (23) return_stmt -> . RETURN testlist
    (48) testlist -> . testlist_multi COMMA
    (49) testlist -> . testlist_multi
    (50) testlist_multi -> . testlist_multi COMMA test
    (51) testlist_multi -> . test
    (52) test -> . comparison
    (31) comparison -> . comparison PLUS comparison
    (32) comparison -> . comparison MINUS comparison
    (33) comparison -> . comparison MULT comparison
    (34) comparison -> . comparison DIV comparison
    (35) comparison -> . comparison LT comparison
    (36) comparison -> . comparison EQ comparison
    (37) comparison -> . comparison GT comparison
    (38) comparison -> . PLUS comparison
    (39) comparison -> . MINUS comparison
    (40) comparison -> . power
    (41) power -> . atom
    (42) power -> . atom trailer
    (43) atom -> . NAME
    (44) atom -> . NUMBER
    (45) atom -> . STRING
    (46) atom -> . LPAR testlist RPAR

    DEDENT          shift and go to state 89
    IF              shift and go to state 14
    DEF             shift and go to state 7
    RETURN          shift and go to state 5
    PLUS            shift and go to state 12
    MINUS           shift and go to state 6
    NAME            shift and go to state 25
    NUMBER          shift and go to state 3
    STRING          shift and go to state 16
    LPAR            shift and go to state 1

    flow_stmt                      shift and go to state 8
    comparison                     shift and go to state 26
    expr_stmt                      shift and go to state 10
    if_stmt                        shift and go to state 27
    small_stmt                     shift and go to state 2
    testlist                       shift and go to state 19
    stmt                           shift and go to state 90
    testlist_multi                 shift and go to state 21
    simple_stmt                    shift and go to state 18
    power                          shift and go to state 17
    test                           shift and go to state 13
    return_stmt                    shift and go to state 4
    atom                           shift and go to state 22
    funcdef                        shift and go to state 23
    compound_stmt                  shift and go to state 15
    small_stmts                    shift and go to state 29

state 88

    (30) stmts -> stmt .

    DEDENT          reduce using rule 30 (stmts -> stmt .)
    IF              reduce using rule 30 (stmts -> stmt .)
    DEF             reduce using rule 30 (stmts -> stmt .)
    RETURN          reduce using rule 30 (stmts -> stmt .)
    PLUS            reduce using rule 30 (stmts -> stmt .)
    MINUS           reduce using rule 30 (stmts -> stmt .)
    NAME            reduce using rule 30 (stmts -> stmt .)
    NUMBER          reduce using rule 30 (stmts -> stmt .)
    STRING          reduce using rule 30 (stmts -> stmt .)
    LPAR            reduce using rule 30 (stmts -> stmt .)


state 89

    (28) suite -> NEWLINE INDENT stmts DEDENT .

    ENDMARKER       reduce using rule 28 (suite -> NEWLINE INDENT stmts DEDENT .)
    NEWLINE         reduce using rule 28 (suite -> NEWLINE INDENT stmts DEDENT .)
    IF              reduce using rule 28 (suite -> NEWLINE INDENT stmts DEDENT .)
    DEF             reduce using rule 28 (suite -> NEWLINE INDENT stmts DEDENT .)
    RETURN          reduce using rule 28 (suite -> NEWLINE INDENT stmts DEDENT .)
    PLUS            reduce using rule 28 (suite -> NEWLINE INDENT stmts DEDENT .)
    MINUS           reduce using rule 28 (suite -> NEWLINE INDENT stmts DEDENT .)
    NAME            reduce using rule 28 (suite -> NEWLINE INDENT stmts DEDENT .)
    NUMBER          reduce using rule 28 (suite -> NEWLINE INDENT stmts DEDENT .)
    STRING          reduce using rule 28 (suite -> NEWLINE INDENT stmts DEDENT .)
    LPAR            reduce using rule 28 (suite -> NEWLINE INDENT stmts DEDENT .)
    END             reduce using rule 28 (suite -> NEWLINE INDENT stmts DEDENT .)
    DEDENT          reduce using rule 28 (suite -> NEWLINE INDENT stmts DEDENT .)


state 90

    (29) stmts -> stmts stmt .

    DEDENT          reduce using rule 29 (stmts -> stmts stmt .)
    IF              reduce using rule 29 (stmts -> stmts stmt .)
    DEF             reduce using rule 29 (stmts -> stmts stmt .)
    RETURN          reduce using rule 29 (stmts -> stmts stmt .)
    PLUS            reduce using rule 29 (stmts -> stmts stmt .)
    MINUS           reduce using rule 29 (stmts -> stmts stmt .)
    NAME            reduce using rule 29 (stmts -> stmts stmt .)
    NUMBER          reduce using rule 29 (stmts -> stmts stmt .)
    STRING          reduce using rule 29 (stmts -> stmts stmt .)
    LPAR            reduce using rule 29 (stmts -> stmts stmt .)

